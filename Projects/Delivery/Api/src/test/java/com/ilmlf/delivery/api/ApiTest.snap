com.ilmlf.delivery.api.ApiTest.testStack=[
  {
    "Parameters": {
      "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899ArtifactHashCE23CAD6": {
        "Description": "Artifact hash for asset \"522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899\"",
        "Type": "String"
      },
      "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3BucketF8C8B4ED": {
        "Description": "S3 bucket for asset \"522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899\"",
        "Type": "String"
      },
      "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E": {
        "Description": "S3 key for asset version \"522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899\"",
        "Type": "String"
      },
      "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": {
        "Description": "Artifact hash for asset \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\"",
        "Type": "String"
      },
      "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": {
        "Description": "S3 bucket for asset \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\"",
        "Type": "String"
      },
      "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": {
        "Description": "S3 key for asset version \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\"",
        "Type": "String"
      }
    },
    "Resources": {
      "AccountApiCwRole1997551D": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "ApiGtwyAccountCwRole": {
        "DependsOn": [
          "ILMLFDelivery"
        ],
        "Properties": {
          "CloudWatchRoleArn": {
            "Fn::GetAtt": [
              "AccountApiCwRole1997551D",
              "Arn"
            ]
          }
        },
        "Type": "AWS::ApiGateway::Account"
      },
      "BookDelivery": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3BucketF8C8B4ED"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": "DeliveryProjectDbFarmerDBSe-test",
              "DB_ENDPOINT": "farmerdbproxy.proxy-test.eu-west-1.rds.amazonaws.com:3306/FarmerDB",
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": "DbUserSecret"
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.BookDelivery",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithIam7B69CDEF",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              "sg-test"
            ],
            "SubnetIds": [
              "p-12345",
              "p-67890"
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "CreateSlots": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3BucketF8C8B4ED"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": "DeliveryProjectDbFarmerDBSe-test",
              "DB_ENDPOINT": "farmerdbproxy.proxy-test.eu-west-1.rds.amazonaws.com:3306/FarmerDB",
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": "DbUserSecret"
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.CreateSlots",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithIam7B69CDEF",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              "sg-test"
            ],
            "SubnetIds": [
              "p-12345",
              "p-67890"
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "FarmLambdaRdsProxyRoleWithIam7B69CDEF": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "rds-db:connect",
                "Effect": "Allow",
                "Resource": "arn:aws:rds-db:region-test:account-test:dbuser:prx-test/lambda_iam"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "Roles": [
            {
              "Ref": "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "FarmLambdaRdsProxyRoleWithPwDefaultPolicy8A1126FD": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:DescribeSecret"
                ],
                "Effect": "Allow",
                "Resource": [
                  "arn:aws:secretsmanager:eu-west-1:01234567809:secret:DeliveryProjectDbFarmerDBSe-test-test",
                  "arn:aws:secretsmanager:eu-west-1:01234567809:secret:DbUserSecret-test"
                ]
              },
              {
                "Action": "rds-db:connect",
                "Effect": "Allow",
                "Resource": "arn:aws:rds:eu-west-1:01234567809:db-proxy:prx-test"
              },
              {
                "Action": "kms:Decrypt",
                "Effect": "Allow",
                "Resource": "arn:aws:kms:region-test:account-test:key/*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "FarmLambdaRdsProxyRoleWithPwDefaultPolicy8A1126FD",
          "Roles": [
            {
              "Ref": "FarmLambdaRdsProxyRoleWithPwF1DCB811"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "FarmLambdaRdsProxyRoleWithPwF1DCB811": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "GetSlots": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3BucketF8C8B4ED"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": "DeliveryProjectDbFarmerDBSe-test",
              "DB_ENDPOINT": "farmerdbproxy.proxy-test.eu-west-1.rds.amazonaws.com:3306/FarmerDB",
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": "DbUserSecret"
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.GetSlots",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithIam7B69CDEF",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              "sg-test"
            ],
            "SubnetIds": [
              "p-12345",
              "p-67890"
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "ILMLFDelivery": {
        "Properties": {
          "AccessLogSetting": {
            "DestinationArn": {
              "Fn::GetAtt": [
                "ILMLFDeliveryAccessF3713532",
                "Arn"
              ]
            },
            "Format": "{profile=$context.authorizer.claims.profile, ip=$context.identity.sourceIp, requestId=$context.requestId, responseLength=$context.responseLength, httpMethod=$context.httpMethod, protocol=$context.protocol, resourcePath=$context.resourcePath, requestTime=$context.requestTime, username=$context.authorizer.claims['cognito:username'], status=$context.status}"
          },
          "Cors": {
            "AllowHeaders": "'*'",
            "AllowMethods": "'*'",
            "AllowOrigin": "'*'"
          },
          "DefinitionBody": {
            "components": {
              "schemas": {
                "CreateSlot": {
                  "properties": {
                    "slots": {
                      "items": {
                        "$ref": "#/components/schemas/NewSlot"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "DeliveryBooking": {
                  "properties": {
                    "userId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "NewSlot": {
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "numDeliveries": {
                      "type": "integer"
                    },
                    "to": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "Slot": {
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "slotId": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "Slots": {
                  "properties": {
                    "availableSlots": {
                      "items": {
                        "$ref": "#/components/schemas/Slot"
                      },
                      "type": "array"
                    },
                    "farmId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "info": {
              "description": "API spec for the ILMLF delivery service",
              "title": "Delivery Service API",
              "version": "1.0"
            },
            "openapi": "3.0.1",
            "paths": {
              "/farm/{farm-id}/slot/{slot-id}": {
                "put": {
                  "operationId": "Book Delivery",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "farm-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "slot-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/DeliveryBooking"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "credentials": {
                      "Fn::GetAtt": [
                        "apiRole",
                        "Arn"
                      ]
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": 1,
                    "type": "AWS_PROXY",
                    "uri": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:apigateway:region-test:lambda:path/2015-03-31/functions/",
                          {
                            "Fn::GetAtt": [
                              "BookDelivery",
                              "Arn"
                            ]
                          },
                          "/invocations"
                        ]
                      ]
                    }
                  }
                }
              },
              "/farm/{farm-id}/slots": {
                "get": {
                  "operationId": "GET HTTP",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "farm-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/Slots"
                          }
                        }
                      },
                      "description": "200 response",
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "credentials": {
                      "Fn::GetAtt": [
                        "apiRole",
                        "Arn"
                      ]
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": 1,
                    "type": "AWS_PROXY",
                    "uri": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:apigateway:region-test:lambda:path/2015-03-31/functions/",
                          {
                            "Fn::GetAtt": [
                              "GetSlots",
                              "Arn"
                            ]
                          },
                          "/invocations"
                        ]
                      ]
                    }
                  }
                },
                "post": {
                  "operationId": "Create Delivery Slot",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "farm-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/CreateSlot"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "credentials": {
                      "Fn::GetAtt": [
                        "apiRole",
                        "Arn"
                      ]
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": 1,
                    "type": "AWS_PROXY",
                    "uri": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:apigateway:region-test:lambda:path/2015-03-31/functions/",
                          {
                            "Fn::GetAtt": [
                              "CreateSlots",
                              "Arn"
                            ]
                          },
                          "/invocations"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "StageName": "ILMLFDeliveryStage"
        },
        "Type": "AWS::Serverless::Api"
      },
      "ILMLFDeliveryAccessF3713532": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "RetentionInDays": 60
        },
        "Type": "AWS::Logs::LogGroup",
        "UpdateReplacePolicy": "Retain"
      },
      "InvokePopulateDataProviderframeworkonEvent9A3B4E42": {
        "DependsOn": [
          "InvokePopulateDataProviderframeworkonEventServiceRoleDefaultPolicy67D538A8",
          "InvokePopulateDataProviderframeworkonEventServiceRole2282706B"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Description": "AWS CDK resource provider framework - onEvent (test/InvokePopulateDataProvider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "PopulateFarmDb",
                  "Arn"
                ]
              }
            }
          },
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "InvokePopulateDataProviderframeworkonEventServiceRole2282706B",
              "Arn"
            ]
          },
          "Runtime": "nodejs14.x",
          "Timeout": 900
        },
        "Type": "AWS::Lambda::Function"
      },
      "InvokePopulateDataProviderframeworkonEventServiceRole2282706B": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "InvokePopulateDataProviderframeworkonEventServiceRoleDefaultPolicy67D538A8": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "PopulateFarmDb",
                    "Arn"
                  ]
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "InvokePopulateDataProviderframeworkonEventServiceRoleDefaultPolicy67D538A8",
          "Roles": [
            {
              "Ref": "InvokePopulateDataProviderframeworkonEventServiceRole2282706B"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "PopulateDataProviderv1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "InvokePopulateDataProviderframeworkonEvent9A3B4E42",
              "Arn"
            ]
          }
        },
        "Type": "Custom::PopulateDataProvider",
        "UpdateReplacePolicy": "Delete"
      },
      "PopulateFarmDb": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithPwDefaultPolicy8A1126FD",
          "FarmLambdaRdsProxyRoleWithPwF1DCB811"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3BucketF8C8B4ED"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameters522493e47112147a23b74f640d290c017f3257e40f2a2904654744cab0ac7899S3VersionKey019BCD3E"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": "DeliveryProjectDbFarmerDBSe-test",
              "DB_ENDPOINT": "farmerdb.cyo3qc04zrsp.eu-west-1.rds.amazonaws.com:3306",
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": "DbUserSecret"
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.PopulateFarmDb",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithPwF1DCB811",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              "sg-test"
            ],
            "SubnetIds": [
              "p-12345",
              "p-67890"
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "apiRole": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "apiRoleDefaultPolicy771DC0DD": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "CreateSlots",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "GetSlots",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "BookDelivery",
                      "Arn"
                    ]
                  }
                ]
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "apiRoleDefaultPolicy771DC0DD",
          "Roles": [
            {
              "Ref": "apiRole"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      }
    },
    "Transform": "AWS::Serverless-2016-10-31"
  }
]