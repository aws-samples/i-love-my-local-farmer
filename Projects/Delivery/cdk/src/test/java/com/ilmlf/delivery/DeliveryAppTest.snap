com.ilmlf.delivery.DeliveryAppTest.testApiStack=[
  {
    "Parameters": {
      "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": {
        "Description": "Artifact hash for asset \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\"",
        "Type": "String"
      },
      "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": {
        "Description": "S3 bucket for asset \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\"",
        "Type": "String"
      },
      "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": {
        "Description": "S3 key for asset version \"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\"",
        "Type": "String"
      },
      "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eArtifactHash05428C1E": {
        "Description": "Artifact hash for asset \"e74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3e\"",
        "Type": "String"
      },
      "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3BucketEBAC4B0A": {
        "Description": "S3 bucket for asset \"e74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3e\"",
        "Type": "String"
      },
      "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44": {
        "Description": "S3 key for asset version \"e74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3e\"",
        "Type": "String"
      }
    },
    "Resources": {
      "AccountApiCwRole1997551D": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "ApiGtwyAccountCwRole": {
        "DependsOn": [
          "ILMLFDelivery"
        ],
        "Properties": {
          "CloudWatchRoleArn": {
            "Fn::GetAtt": [
              "AccountApiCwRole1997551D",
              "Arn"
            ]
          }
        },
        "Type": "AWS::ApiGateway::Account"
      },
      "BookDelivery": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3BucketEBAC4B0A"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb38EEDF77"
                      }
                    ]
                  }
                ]
              },
              "DB_ENDPOINT": {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDbProxy7A9720C2EndpointD09B79E2"
              },
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDbUserSecret7350D430EDA80404"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.BookDelivery",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithIam7B69CDEF",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDeliverySGDA50C27CGroupIdB07DB7C1"
              }
            ],
            "SubnetIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet1SubnetCCC9274B1F280ACB"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet2SubnetE7B0A714A1ABAF28"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet3Subnet1ED561EADF4C4102"
              }
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "CreateSlots": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3BucketEBAC4B0A"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb38EEDF77"
                      }
                    ]
                  }
                ]
              },
              "DB_ENDPOINT": {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDbProxy7A9720C2EndpointD09B79E2"
              },
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDbUserSecret7350D430EDA80404"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.CreateSlots",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithIam7B69CDEF",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDeliverySGDA50C27CGroupIdB07DB7C1"
              }
            ],
            "SubnetIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet1SubnetCCC9274B1F280ACB"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet2SubnetE7B0A714A1ABAF28"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet3Subnet1ED561EADF4C4102"
              }
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "FarmLambdaRdsProxyRoleWithIam7B69CDEF": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "rds-db:connect",
                "Effect": "Allow",
                "Resource": "arn:aws:rds-db:eu-west-1:433621526002:dbuser:*/lambda_iam"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "Roles": [
            {
              "Ref": "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "FarmLambdaRdsProxyRoleWithPwDefaultPolicy8A1126FD": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": [
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:DescribeSecret"
                ],
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefFarmerDBSecretAttachment8D79E04A025407E0"
                  },
                  {
                    "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDbUserSecret7350D430EDA80404"
                  }
                ]
              },
              {
                "Action": "rds-db:connect",
                "Effect": "Allow",
                "Resource": {
                  "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDbProxy7A9720C2DBProxyArn951A8E1D"
                }
              },
              {
                "Action": "kms:Decrypt",
                "Effect": "Allow",
                "Resource": "arn:aws:kms:eu-west-1:433621526002:key/*"
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "FarmLambdaRdsProxyRoleWithPwDefaultPolicy8A1126FD",
          "Roles": [
            {
              "Ref": "FarmLambdaRdsProxyRoleWithPwF1DCB811"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "FarmLambdaRdsProxyRoleWithPwF1DCB811": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "GetSlots": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithIamDefaultPolicyE0B0D73A",
          "FarmLambdaRdsProxyRoleWithIam7B69CDEF"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3BucketEBAC4B0A"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb38EEDF77"
                      }
                    ]
                  }
                ]
              },
              "DB_ENDPOINT": {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDbProxy7A9720C2EndpointD09B79E2"
              },
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDbUserSecret7350D430EDA80404"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.GetSlots",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithIam7B69CDEF",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDeliverySGDA50C27CGroupIdB07DB7C1"
              }
            ],
            "SubnetIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet1SubnetCCC9274B1F280ACB"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet2SubnetE7B0A714A1ABAF28"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet3Subnet1ED561EADF4C4102"
              }
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "ILMLFDelivery": {
        "Properties": {
          "AccessLogSetting": {
            "DestinationArn": {
              "Fn::GetAtt": [
                "ILMLFDeliveryAccessF3713532",
                "Arn"
              ]
            },
            "Format": "{status=$context.status, profile=$context.authorizer.claims.profile, ip=$context.identity.sourceIp, requestId=$context.requestId, responseLength=$context.responseLength, httpMethod=$context.httpMethod, protocol=$context.protocol, resourcePath=$context.resourcePath, requestTime=$context.requestTime, username=$context.authorizer.claims['cognito:username']}"
          },
          "Cors": {
            "AllowHeaders": "'*'",
            "AllowMethods": "'*'",
            "AllowOrigin": "'*'"
          },
          "DefinitionBody": {
            "components": {
              "schemas": {
                "CreateSlot": {
                  "properties": {
                    "slots": {
                      "items": {
                        "$ref": "#/components/schemas/NewSlot"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                },
                "DeliveryBooking": {
                  "properties": {
                    "userId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "NewSlot": {
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "numDeliveries": {
                      "type": "integer"
                    },
                    "to": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "Slot": {
                  "properties": {
                    "from": {
                      "type": "string"
                    },
                    "slotId": {
                      "type": "string"
                    },
                    "to": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "Slots": {
                  "properties": {
                    "availableSlots": {
                      "items": {
                        "$ref": "#/components/schemas/Slot"
                      },
                      "type": "array"
                    },
                    "farmId": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "info": {
              "description": "API spec for the ILMLF delivery service",
              "title": "Delivery Service API",
              "version": "1.0"
            },
            "openapi": "3.0.1",
            "paths": {
              "/farm/{farm-id}/slot/{slot-id}": {
                "put": {
                  "operationId": "Book Delivery",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "farm-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    },
                    {
                      "in": "path",
                      "name": "slot-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/DeliveryBooking"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "credentials": {
                      "Fn::GetAtt": [
                        "apiRole",
                        "Arn"
                      ]
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": 1,
                    "type": "AWS_PROXY",
                    "uri": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                          {
                            "Fn::GetAtt": [
                              "BookDelivery",
                              "Arn"
                            ]
                          },
                          "/invocations"
                        ]
                      ]
                    }
                  }
                }
              },
              "/farm/{farm-id}/slots": {
                "get": {
                  "operationId": "GET HTTP",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "farm-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "responses": {
                    "200": {
                      "content": {
                        "application/json": {
                          "schema": {
                            "$ref": "#/components/schemas/Slots"
                          }
                        }
                      },
                      "description": "200 response",
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "credentials": {
                      "Fn::GetAtt": [
                        "apiRole",
                        "Arn"
                      ]
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": 1,
                    "type": "AWS_PROXY",
                    "uri": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                          {
                            "Fn::GetAtt": [
                              "GetSlots",
                              "Arn"
                            ]
                          },
                          "/invocations"
                        ]
                      ]
                    }
                  }
                },
                "post": {
                  "operationId": "Create Delivery Slot",
                  "parameters": [
                    {
                      "in": "path",
                      "name": "farm-id",
                      "required": true,
                      "schema": {
                        "type": "string"
                      }
                    }
                  ],
                  "requestBody": {
                    "content": {
                      "application/json": {
                        "schema": {
                          "$ref": "#/components/schemas/CreateSlot"
                        }
                      }
                    },
                    "required": true
                  },
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "schema": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "credentials": {
                      "Fn::GetAtt": [
                        "apiRole",
                        "Arn"
                      ]
                    },
                    "httpMethod": "POST",
                    "payloadFormatVersion": 1,
                    "type": "AWS_PROXY",
                    "uri": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/",
                          {
                            "Fn::GetAtt": [
                              "CreateSlots",
                              "Arn"
                            ]
                          },
                          "/invocations"
                        ]
                      ]
                    }
                  }
                }
              }
            }
          },
          "StageName": "ILMLFDeliveryStage"
        },
        "Type": "AWS::Serverless::Api"
      },
      "ILMLFDeliveryAccessF3713532": {
        "DeletionPolicy": "Retain",
        "Properties": {
          "RetentionInDays": 60
        },
        "Type": "AWS::Logs::LogGroup",
        "UpdateReplacePolicy": "Retain"
      },
      "InvokePopulateDataProviderframeworkonEvent9A3B4E42": {
        "DependsOn": [
          "InvokePopulateDataProviderframeworkonEventServiceRoleDefaultPolicy67D538A8",
          "InvokePopulateDataProviderframeworkonEventServiceRole2282706B"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Description": "AWS CDK resource provider framework - onEvent (DeliveryProject-Api/InvokePopulateDataProvider)",
          "Environment": {
            "Variables": {
              "USER_ON_EVENT_FUNCTION_ARN": {
                "Fn::GetAtt": [
                  "PopulateFarmDb",
                  "Arn"
                ]
              }
            }
          },
          "Handler": "framework.onEvent",
          "Role": {
            "Fn::GetAtt": [
              "InvokePopulateDataProviderframeworkonEventServiceRole2282706B",
              "Arn"
            ]
          },
          "Runtime": "nodejs14.x",
          "Timeout": 900
        },
        "Type": "AWS::Lambda::Function"
      },
      "InvokePopulateDataProviderframeworkonEventServiceRole2282706B": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "InvokePopulateDataProviderframeworkonEventServiceRoleDefaultPolicy67D538A8": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": {
                  "Fn::GetAtt": [
                    "PopulateFarmDb",
                    "Arn"
                  ]
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "InvokePopulateDataProviderframeworkonEventServiceRoleDefaultPolicy67D538A8",
          "Roles": [
            {
              "Ref": "InvokePopulateDataProviderframeworkonEventServiceRole2282706B"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "PopulateDataProviderv1": {
        "DeletionPolicy": "Delete",
        "Properties": {
          "ServiceToken": {
            "Fn::GetAtt": [
              "InvokePopulateDataProviderframeworkonEvent9A3B4E42",
              "Arn"
            ]
          }
        },
        "Type": "Custom::PopulateDataProvider",
        "UpdateReplacePolicy": "Delete"
      },
      "PopulateFarmDb": {
        "DependsOn": [
          "FarmLambdaRdsProxyRoleWithPwDefaultPolicy8A1126FD",
          "FarmLambdaRdsProxyRoleWithPwF1DCB811"
        ],
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3BucketEBAC4B0A"
            },
            "S3Key": {
              "Fn::Join": [
                "",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "||",
                          {
                            "Ref": "AssetParameterse74fe56d244bf25ca0b1a1511d497db6f8c228ad9c323ae3d018549ed58c4d3eS3VersionKeyF880CA44"
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            }
          },
          "Environment": {
            "Variables": {
              "CORS_ALLOW_ORIGIN_HEADER": "*",
              "DB_ADMIN_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb38EEDF77"
                      }
                    ]
                  }
                ]
              },
              "DB_ENDPOINT": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDBC89642C8EndpointAddressAE4CE17F"
                    },
                    ":",
                    {
                      "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDBC89642C8EndpointPortECF13DED"
                    }
                  ]
                ]
              },
              "DB_REGION": "eu-west-1",
              "DB_USER": "lambda_iam",
              "DB_USER_SECRET": {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputRefDbUserSecret7350D430EDA80404"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "Handler": "com.ilmlf.delivery.api.handlers.PopulateFarmDb",
          "MemorySize": 2048,
          "Role": {
            "Fn::GetAtt": [
              "FarmLambdaRdsProxyRoleWithPwF1DCB811",
              "Arn"
            ]
          },
          "Runtime": "java11",
          "Timeout": 60,
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDeliverySGDA50C27CGroupIdB07DB7C1"
              }
            ],
            "SubnetIds": [
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet1SubnetCCC9274B1F280ACB"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet2SubnetE7B0A714A1ABAF28"
              },
              {
                "Fn::ImportValue": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet3Subnet1ED561EADF4C4102"
              }
            ]
          }
        },
        "Type": "AWS::Lambda::Function"
      },
      "apiRole": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
              ]
            }
          ]
        },
        "Type": "AWS::IAM::Role"
      },
      "apiRoleDefaultPolicy771DC0DD": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "lambda:InvokeFunction",
                "Effect": "Allow",
                "Resource": [
                  {
                    "Fn::GetAtt": [
                      "CreateSlots",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "GetSlots",
                      "Arn"
                    ]
                  },
                  {
                    "Fn::GetAtt": [
                      "BookDelivery",
                      "Arn"
                    ]
                  }
                ]
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "apiRoleDefaultPolicy771DC0DD",
          "Roles": [
            {
              "Ref": "apiRole"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      }
    },
    "Transform": "AWS::Serverless-2016-10-31"
  }
]


com.ilmlf.delivery.DeliveryAppTest.testDbStack=[
  {
    "Outputs": {
      "ExportsOutputFnGetAttFarmerDBC89642C8EndpointAddressAE4CE17F": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDBC89642C8EndpointAddressAE4CE17F"
        },
        "Value": {
          "Fn::GetAtt": [
            "FarmerDBC89642C8",
            "Endpoint.Address"
          ]
        }
      },
      "ExportsOutputFnGetAttFarmerDBC89642C8EndpointPortECF13DED": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDBC89642C8EndpointPortECF13DED"
        },
        "Value": {
          "Fn::GetAtt": [
            "FarmerDBC89642C8",
            "Endpoint.Port"
          ]
        }
      },
      "ExportsOutputFnGetAttFarmerDbProxy7A9720C2DBProxyArn951A8E1D": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDbProxy7A9720C2DBProxyArn951A8E1D"
        },
        "Value": {
          "Fn::GetAtt": [
            "FarmerDbProxy7A9720C2",
            "DBProxyArn"
          ]
        }
      },
      "ExportsOutputFnGetAttFarmerDbProxy7A9720C2EndpointD09B79E2": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDbProxy7A9720C2EndpointD09B79E2"
        },
        "Value": {
          "Fn::GetAtt": [
            "FarmerDbProxy7A9720C2",
            "Endpoint"
          ]
        }
      },
      "ExportsOutputFnGetAttFarmerDeliverySGDA50C27CGroupIdB07DB7C1": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputFnGetAttFarmerDeliverySGDA50C27CGroupIdB07DB7C1"
        },
        "Value": {
          "Fn::GetAtt": [
            "FarmerDeliverySGDA50C27C",
            "GroupId"
          ]
        }
      },
      "ExportsOutputRefDbUserSecret7350D430EDA80404": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputRefDbUserSecret7350D430EDA80404"
        },
        "Value": {
          "Ref": "DbUserSecret7350D430"
        }
      },
      "ExportsOutputRefDeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb38EEDF77": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputRefDeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb38EEDF77"
        },
        "Value": {
          "Ref": "DeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb"
        }
      },
      "ExportsOutputRefFarmerDBSecretAttachment8D79E04A025407E0": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputRefFarmerDBSecretAttachment8D79E04A025407E0"
        },
        "Value": {
          "Ref": "FarmerDBSecretAttachment8D79E04A"
        }
      },
      "ExportsOutputReffarmerVpcPrivateSubnet1SubnetCCC9274B1F280ACB": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet1SubnetCCC9274B1F280ACB"
        },
        "Value": {
          "Ref": "farmerVpcPrivateSubnet1SubnetCCC9274B"
        }
      },
      "ExportsOutputReffarmerVpcPrivateSubnet2SubnetE7B0A714A1ABAF28": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet2SubnetE7B0A714A1ABAF28"
        },
        "Value": {
          "Ref": "farmerVpcPrivateSubnet2SubnetE7B0A714"
        }
      },
      "ExportsOutputReffarmerVpcPrivateSubnet3Subnet1ED561EADF4C4102": {
        "Export": {
          "Name": "DeliveryProject-Db:ExportsOutputReffarmerVpcPrivateSubnet3Subnet1ED561EADF4C4102"
        },
        "Value": {
          "Ref": "farmerVpcPrivateSubnet3Subnet1ED561EA"
        }
      },
      "configJsonContents": {
        "Description": "Config file (in json format) for Stacks with Lambdas",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{DB_ADMIN_SECRET=",
              {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "DeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb"
                      }
                    ]
                  }
                ]
              },
              ", DB_ADMIN_SECRET_ARN=",
              {
                "Ref": "FarmerDBSecretAttachment8D79E04A"
              },
              ", DB_ENDPOINT=",
              {
                "Fn::GetAtt": [
                  "FarmerDBC89642C8",
                  "Endpoint.Address"
                ]
              },
              ":",
              {
                "Fn::GetAtt": [
                  "FarmerDBC89642C8",
                  "Endpoint.Port"
                ]
              },
              ", DB_PROXY_ARN=",
              {
                "Fn::GetAtt": [
                  "FarmerDbProxy7A9720C2",
                  "DBProxyArn"
                ]
              },
              ", DB_PROXY_ENDPOINT=",
              {
                "Fn::GetAtt": [
                  "FarmerDbProxy7A9720C2",
                  "Endpoint"
                ]
              },
              ":3306/FarmerDB, DB_REGION=eu-west-1, DB_SG_ID=",
              {
                "Fn::GetAtt": [
                  "FarmerDeliverySGDA50C27C",
                  "GroupId"
                ]
              },
              ", DB_USER=lambda_iam, DB_USER_SECRET=",
              {
                "Fn::Select": [
                  6,
                  {
                    "Fn::Split": [
                      ":",
                      {
                        "Ref": "DbUserSecret7350D430"
                      }
                    ]
                  }
                ]
              },
              ", DB_USER_SECRET_ARN=",
              {
                "Ref": "DbUserSecret7350D430"
              },
              ", DB_VPC_ID=",
              {
                "Ref": "farmerVpc3E1EF418"
              },
              "}"
            ]
          ]
        }
      }
    },
    "Resources": {
      "DbUserSecret7350D430": {
        "Properties": {
          "Description": "Db Username and password",
          "GenerateSecretString": {
            "ExcludePunctuation": true,
            "GenerateStringKey": "password",
            "PasswordLength": 16,
            "SecretStringTemplate": "{\"username\": \"lambda_iam\"}"
          },
          "Name": "DbUserSecret"
        },
        "Type": "AWS::SecretsManager::Secret"
      },
      "DeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb": {
        "Properties": {
          "Description": {
            "Fn::Join": [
              "",
              [
                "Generated by the CDK for stack: ",
                {
                  "Ref": "AWS::StackName"
                }
              ]
            ]
          },
          "GenerateSecretString": {
            "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
            "GenerateStringKey": "password",
            "PasswordLength": 30,
            "SecretStringTemplate": "{\"username\":\"FarmerDBadmin\"}"
          }
        },
        "Type": "AWS::SecretsManager::Secret"
      },
      "FarmerDBC89642C8": {
        "DeletionPolicy": "Snapshot",
        "Properties": {
          "AllocatedStorage": "25",
          "AutoMinorVersionUpgrade": true,
          "BackupRetentionPeriod": 7,
          "CopyTagsToSnapshot": true,
          "DBInstanceClass": "db.t2.small",
          "DBName": "FarmerDB",
          "DBSubnetGroupName": {
            "Ref": "FarmerDBSubnetGroup1B4DA139"
          },
          "DeletionProtection": false,
          "Engine": "mysql",
          "EngineVersion": "5.7.31",
          "MasterUserPassword": {
            "Fn::Join": [
              "",
              [
                "{{resolve:secretsmanager:",
                {
                  "Ref": "DeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb"
                },
                ":SecretString:password::}}"
              ]
            ]
          },
          "MasterUsername": "FarmerDBadmin",
          "MultiAZ": true,
          "Port": "3306",
          "PubliclyAccessible": true,
          "StorageEncrypted": true,
          "StorageType": "gp2",
          "VPCSecurityGroups": [
            {
              "Fn::GetAtt": [
                "FarmerDeliverySGDA50C27C",
                "GroupId"
              ]
            }
          ]
        },
        "Type": "AWS::RDS::DBInstance",
        "UpdateReplacePolicy": "Snapshot"
      },
      "FarmerDBSecretAttachment8D79E04A": {
        "Properties": {
          "SecretId": {
            "Ref": "DeliveryProjectDbFarmerDBSecretF1D2B0893fdaad7efa858a3daf9490cf0a702aeb"
          },
          "TargetId": {
            "Ref": "FarmerDBC89642C8"
          },
          "TargetType": "AWS::RDS::DBInstance"
        },
        "Type": "AWS::SecretsManager::SecretTargetAttachment"
      },
      "FarmerDBSubnetGroup1B4DA139": {
        "Properties": {
          "DBSubnetGroupDescription": "Subnet group for FarmerDB database",
          "SubnetIds": [
            {
              "Ref": "farmerVpcPublicSubnet1SubnetD688CBA4"
            },
            {
              "Ref": "farmerVpcPublicSubnet2Subnet9E651304"
            },
            {
              "Ref": "farmerVpcPublicSubnet3SubnetBC57D4AB"
            }
          ]
        },
        "Type": "AWS::RDS::DBSubnetGroup"
      },
      "FarmerDbProxy7A9720C2": {
        "Properties": {
          "Auth": [
            {
              "AuthScheme": "SECRETS",
              "IAMAuth": "REQUIRED",
              "SecretArn": {
                "Ref": "FarmerDBSecretAttachment8D79E04A"
              }
            },
            {
              "AuthScheme": "SECRETS",
              "IAMAuth": "REQUIRED",
              "SecretArn": {
                "Ref": "DbUserSecret7350D430"
              }
            }
          ],
          "DBProxyName": "FarmerDbProxy",
          "EngineFamily": "MYSQL",
          "RequireTLS": true,
          "RoleArn": {
            "Fn::GetAtt": [
              "RdsProxyRole46223FF5",
              "Arn"
            ]
          },
          "VpcSecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "FarmerDeliverySGDA50C27C",
                "GroupId"
              ]
            }
          ],
          "VpcSubnetIds": [
            {
              "Ref": "farmerVpcPrivateSubnet1SubnetCCC9274B"
            },
            {
              "Ref": "farmerVpcPrivateSubnet2SubnetE7B0A714"
            },
            {
              "Ref": "farmerVpcPrivateSubnet3Subnet1ED561EA"
            }
          ]
        },
        "Type": "AWS::RDS::DBProxy"
      },
      "FarmerDbProxyProxyTargetGroupEC553179": {
        "Properties": {
          "ConnectionPoolConfigurationInfo": {
            "ConnectionBorrowTimeout": 30,
            "MaxConnectionsPercent": 50
          },
          "DBInstanceIdentifiers": [
            {
              "Ref": "FarmerDBC89642C8"
            }
          ],
          "DBProxyName": {
            "Ref": "FarmerDbProxy7A9720C2"
          },
          "TargetGroupName": "default"
        },
        "Type": "AWS::RDS::DBProxyTargetGroup"
      },
      "FarmerDeliverySGDA50C27C": {
        "Properties": {
          "GroupDescription": "Shared SG for database and proxy",
          "SecurityGroupEgress": [
            {
              "CidrIp": "0.0.0.0/0",
              "Description": "Allow all outbound traffic by default",
              "IpProtocol": "-1"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::SecurityGroup"
      },
      "FarmerDeliverySGfromDeliveryProjectDbFarmerDeliverySG5B636083IndirectPort69472C7D": {
        "Properties": {
          "Description": "Allow connections to the database Instance from the Proxy",
          "FromPort": {
            "Fn::GetAtt": [
              "FarmerDBC89642C8",
              "Endpoint.Port"
            ]
          },
          "GroupId": {
            "Fn::GetAtt": [
              "FarmerDeliverySGDA50C27C",
              "GroupId"
            ]
          },
          "IpProtocol": "tcp",
          "SourceSecurityGroupId": {
            "Fn::GetAtt": [
              "FarmerDeliverySGDA50C27C",
              "GroupId"
            ]
          },
          "ToPort": {
            "Fn::GetAtt": [
              "FarmerDBC89642C8",
              "Endpoint.Port"
            ]
          }
        },
        "Type": "AWS::EC2::SecurityGroupIngress"
      },
      "RdsProxyRole46223FF5": {
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "rds.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          }
        },
        "Type": "AWS::IAM::Role"
      },
      "RdsProxyRoleDefaultPolicy2AF84426": {
        "Properties": {
          "PolicyDocument": {
            "Statement": [
              {
                "Action": "kms:Decrypt",
                "Effect": "Allow",
                "Resource": {
                  "Ref": "DbUserSecret7350D430"
                }
              },
              {
                "Action": [
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:DescribeSecret"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Ref": "FarmerDBSecretAttachment8D79E04A"
                }
              },
              {
                "Action": [
                  "secretsmanager:GetSecretValue",
                  "secretsmanager:DescribeSecret"
                ],
                "Effect": "Allow",
                "Resource": {
                  "Ref": "DbUserSecret7350D430"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "PolicyName": "RdsProxyRoleDefaultPolicy2AF84426",
          "Roles": [
            {
              "Ref": "RdsProxyRole46223FF5"
            }
          ]
        },
        "Type": "AWS::IAM::Policy"
      },
      "farmerVpc3E1EF418": {
        "Properties": {
          "CidrBlock": "10.0.0.0/16",
          "EnableDnsHostnames": true,
          "EnableDnsSupport": true,
          "InstanceTenancy": "default",
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc"
            }
          ]
        },
        "Type": "AWS::EC2::VPC"
      },
      "farmerVpcIGW77EA3214": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc"
            }
          ]
        },
        "Type": "AWS::EC2::InternetGateway"
      },
      "farmerVpcPrivateSubnet1DefaultRoute21094D32": {
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "farmerVpcPublicSubnet1NATGatewayAA1B3859"
          },
          "RouteTableId": {
            "Ref": "farmerVpcPrivateSubnet1RouteTableEA47B893"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "farmerVpcPrivateSubnet1RouteTableAssociationB94D34C5": {
        "Properties": {
          "RouteTableId": {
            "Ref": "farmerVpcPrivateSubnet1RouteTableEA47B893"
          },
          "SubnetId": {
            "Ref": "farmerVpcPrivateSubnet1SubnetCCC9274B"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "farmerVpcPrivateSubnet1RouteTableEA47B893": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PrivateSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "farmerVpcPrivateSubnet1SubnetCCC9274B": {
        "Properties": {
          "AvailabilityZone": "dummy1a",
          "CidrBlock": "10.0.96.0/19",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Private"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Private"
            },
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PrivateSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "farmerVpcPrivateSubnet2DefaultRouteE813B3CB": {
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "farmerVpcPublicSubnet2NATGateway1A387200"
          },
          "RouteTableId": {
            "Ref": "farmerVpcPrivateSubnet2RouteTable859130FB"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "farmerVpcPrivateSubnet2RouteTable859130FB": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PrivateSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "farmerVpcPrivateSubnet2RouteTableAssociationB35F50E8": {
        "Properties": {
          "RouteTableId": {
            "Ref": "farmerVpcPrivateSubnet2RouteTable859130FB"
          },
          "SubnetId": {
            "Ref": "farmerVpcPrivateSubnet2SubnetE7B0A714"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "farmerVpcPrivateSubnet2SubnetE7B0A714": {
        "Properties": {
          "AvailabilityZone": "dummy1b",
          "CidrBlock": "10.0.128.0/19",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Private"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Private"
            },
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PrivateSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "farmerVpcPrivateSubnet3DefaultRoute4B8191D6": {
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "NatGatewayId": {
            "Ref": "farmerVpcPublicSubnet3NATGatewayBE3A3665"
          },
          "RouteTableId": {
            "Ref": "farmerVpcPrivateSubnet3RouteTable565CDBD6"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "farmerVpcPrivateSubnet3RouteTable565CDBD6": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PrivateSubnet3"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "farmerVpcPrivateSubnet3RouteTableAssociationC900821D": {
        "Properties": {
          "RouteTableId": {
            "Ref": "farmerVpcPrivateSubnet3RouteTable565CDBD6"
          },
          "SubnetId": {
            "Ref": "farmerVpcPrivateSubnet3Subnet1ED561EA"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "farmerVpcPrivateSubnet3Subnet1ED561EA": {
        "Properties": {
          "AvailabilityZone": "dummy1c",
          "CidrBlock": "10.0.160.0/19",
          "MapPublicIpOnLaunch": false,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Private"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Private"
            },
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PrivateSubnet3"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "farmerVpcPublicSubnet1DefaultRouteD45A595C": {
        "DependsOn": [
          "farmerVpcVPCGW5B113563"
        ],
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "farmerVpcIGW77EA3214"
          },
          "RouteTableId": {
            "Ref": "farmerVpcPublicSubnet1RouteTable70D29438"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "farmerVpcPublicSubnet1EIPB227751A": {
        "Properties": {
          "Domain": "vpc",
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet1"
            }
          ]
        },
        "Type": "AWS::EC2::EIP"
      },
      "farmerVpcPublicSubnet1NATGatewayAA1B3859": {
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "farmerVpcPublicSubnet1EIPB227751A",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "farmerVpcPublicSubnet1SubnetD688CBA4"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet1"
            }
          ]
        },
        "Type": "AWS::EC2::NatGateway"
      },
      "farmerVpcPublicSubnet1RouteTable70D29438": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "farmerVpcPublicSubnet1RouteTableAssociation8318E69F": {
        "Properties": {
          "RouteTableId": {
            "Ref": "farmerVpcPublicSubnet1RouteTable70D29438"
          },
          "SubnetId": {
            "Ref": "farmerVpcPublicSubnet1SubnetD688CBA4"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "farmerVpcPublicSubnet1SubnetD688CBA4": {
        "Properties": {
          "AvailabilityZone": "dummy1a",
          "CidrBlock": "10.0.0.0/19",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Public"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Public"
            },
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet1"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "farmerVpcPublicSubnet2DefaultRouteEE7A93B6": {
        "DependsOn": [
          "farmerVpcVPCGW5B113563"
        ],
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "farmerVpcIGW77EA3214"
          },
          "RouteTableId": {
            "Ref": "farmerVpcPublicSubnet2RouteTable3FCC446A"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "farmerVpcPublicSubnet2EIPFCBCD01A": {
        "Properties": {
          "Domain": "vpc",
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet2"
            }
          ]
        },
        "Type": "AWS::EC2::EIP"
      },
      "farmerVpcPublicSubnet2NATGateway1A387200": {
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "farmerVpcPublicSubnet2EIPFCBCD01A",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "farmerVpcPublicSubnet2Subnet9E651304"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet2"
            }
          ]
        },
        "Type": "AWS::EC2::NatGateway"
      },
      "farmerVpcPublicSubnet2RouteTable3FCC446A": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "farmerVpcPublicSubnet2RouteTableAssociation0F0AFA60": {
        "Properties": {
          "RouteTableId": {
            "Ref": "farmerVpcPublicSubnet2RouteTable3FCC446A"
          },
          "SubnetId": {
            "Ref": "farmerVpcPublicSubnet2Subnet9E651304"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "farmerVpcPublicSubnet2Subnet9E651304": {
        "Properties": {
          "AvailabilityZone": "dummy1b",
          "CidrBlock": "10.0.32.0/19",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Public"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Public"
            },
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet2"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "farmerVpcPublicSubnet3DefaultRoute53761331": {
        "DependsOn": [
          "farmerVpcVPCGW5B113563"
        ],
        "Properties": {
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {
            "Ref": "farmerVpcIGW77EA3214"
          },
          "RouteTableId": {
            "Ref": "farmerVpcPublicSubnet3RouteTableB8F0D062"
          }
        },
        "Type": "AWS::EC2::Route"
      },
      "farmerVpcPublicSubnet3EIP87F3AB2E": {
        "Properties": {
          "Domain": "vpc",
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet3"
            }
          ]
        },
        "Type": "AWS::EC2::EIP"
      },
      "farmerVpcPublicSubnet3NATGatewayBE3A3665": {
        "Properties": {
          "AllocationId": {
            "Fn::GetAtt": [
              "farmerVpcPublicSubnet3EIP87F3AB2E",
              "AllocationId"
            ]
          },
          "SubnetId": {
            "Ref": "farmerVpcPublicSubnet3SubnetBC57D4AB"
          },
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet3"
            }
          ]
        },
        "Type": "AWS::EC2::NatGateway"
      },
      "farmerVpcPublicSubnet3RouteTableAssociation2B98AA24": {
        "Properties": {
          "RouteTableId": {
            "Ref": "farmerVpcPublicSubnet3RouteTableB8F0D062"
          },
          "SubnetId": {
            "Ref": "farmerVpcPublicSubnet3SubnetBC57D4AB"
          }
        },
        "Type": "AWS::EC2::SubnetRouteTableAssociation"
      },
      "farmerVpcPublicSubnet3RouteTableB8F0D062": {
        "Properties": {
          "Tags": [
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet3"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::RouteTable"
      },
      "farmerVpcPublicSubnet3SubnetBC57D4AB": {
        "Properties": {
          "AvailabilityZone": "dummy1c",
          "CidrBlock": "10.0.64.0/19",
          "MapPublicIpOnLaunch": true,
          "Tags": [
            {
              "Key": "aws-cdk:subnet-name",
              "Value": "Public"
            },
            {
              "Key": "aws-cdk:subnet-type",
              "Value": "Public"
            },
            {
              "Key": "Name",
              "Value": "DeliveryProject-Db/farmer-Vpc/PublicSubnet3"
            }
          ],
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::Subnet"
      },
      "farmerVpcVPCGW5B113563": {
        "Properties": {
          "InternetGatewayId": {
            "Ref": "farmerVpcIGW77EA3214"
          },
          "VpcId": {
            "Ref": "farmerVpc3E1EF418"
          }
        },
        "Type": "AWS::EC2::VPCGatewayAttachment"
      }
    }
  }
]